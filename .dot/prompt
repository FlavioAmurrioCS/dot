#!/Users/famurrio/Applications/brew/bin/bash
# shellcheck disable=SC2016,SC2034
#!/usr/bin/env bash

#git branch display

#!/usr/bin/env bash

# PS3="Select a day (1-4): "
# select i in mon tue wed exit; do
# echo ${i}
#     # case $i in
#     # mon) echo "Monday" ;;
#     # tue) echo "Tuesday" ;;
#     # wed) echo "Wednesday" ;;
#     # exit) exit ;;
#     # esac
# done

function ps1_party() {
    local RCol='\[\e[0m\]' # Right color

    local Red='\[\e[0;31m\]'
    local Gre='\[\e[0;32m\]'
    local BYel='\[\e[1;33m\]'
    local BBlu='\[\e[1;34m\]'
    local Pur='\[\e[0;35m\]'

    prompt_mem() {
        echo -n " ($(free -h | awk '/^Mem/ {print $3"/"$2}'))"
    }

    # https://gist.github.com/vratiu/9780109
    # \[\e[0;31m\]
    # __TPUT_BOLD="$(tput bold)"
    # __TPUT_BLACK="${__TPUT_BOLD}$(tput setaf 8)"
    # __TPUT_RED="${__TPUT_BOLD}$(tput setaf 9)"
    # __TPUT_GREEN="${__TPUT_BOLD}$(tput setaf 10)"
    # __TPUT_YELLOW="${__TPUT_BOLD}$(tput setaf 11)"
    # __TPUT_BLUE="${__TPUT_BOLD}$(tput setaf 12)"
    # __TPUT_MAGENTA="${__TPUT_BOLD}$(tput setaf 13)"
    # __TPUT_CYAN="${__TPUT_BOLD}$(tput setaf 14)"
    # __TPUT_WHITE="${__TPUT_BOLD}$(tput setaf 15)"
    # __TPUT_BOLD="$(tput bold)"
    __TPUT_BLACK="\[\e[1;90m\]"
    __TPUT_RED="\[\e[1;91m\]"
    __TPUT_GREEN="\[\e[1;92m\]"
    __TPUT_YELLOW="\[\e[1;93m\]"
    __TPUT_BLUE="\[\e[1;94m\]"
    __TPUT_MAGENTA="\[\e[1;95m\]"
    __TPUT_CYAN="\[\e[1;96m\]"
    __TPUT_WHITE="\[\e[1;97m\]"
    __PS1_BLACK="\[${__TPUT_BLACK}\]"
    __PS1_RED="\[${__TPUT_RED}\]"
    __PS1_GREEN="\[${__TPUT_GREEN}\]"
    __PS1_YELLOW="\[${__TPUT_YELLOW}\]"
    __PS1_BLUE="\[${__TPUT_BLUE}\]"
    __PS1_MAGENTA="\[${__TPUT_MAGENTA}\]"
    __PS1_CYAN="\[${__TPUT_CYAN}\]"
    __PS1_WHITE="\[${__TPUT_WHITE}\]"
    __PS1_USERNAME="${__PS1_YELLOW}\u"
    __PS1_AT="${__PS1_GREEN}@"
    __PS1_HOSTNAME="${__PS1_BLUE}\${MACHINE_NAME:-\h}"
    __PS1_WORKSPACE="${__TPUT_MAGENTA}\w"
    __PS1_PROMPT="${__PS1_WHITE}$ \[\e[1;0m\]"
    __PS1_WRAPPER_START="${__PS1_RED}["
    __PS1_WRAPPER_END="${__PS1_RED}]"
    __PS1_GIT='$(
        BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
        [ "${BRANCH}" = HEAD ] && BRANCH=$(git describe --contains --all HEAD 2>/dev/null)
        [ "${BRANCH}" != "" ] && {
            echo -n "'"${__TPUT_CYAN}"'['"${__TPUT_RED}"'${BRANCH}"
            git ls-files --error-unmatch -m --directory --no-empty-directory -o --exclude-standard ":/*" >/dev/null 2>&1 && echo -n " '"${__TPUT_YELLOW}âœ—"'"
            echo -n "'"${__TPUT_CYAN}"']"
        }
    )'
    ps_arr=(
        "${__PS1_WRAPPER_START}${__PS1_HOSTNAME} ${__PS1_WORKSPACE}${__PS1_WRAPPER_END}${__PS1_PROMPT}"
        "${__PS1_WRAPPER_START}${__PS1_USERNAME}${__PS1_AT}${__PS1_HOSTNAME} ${__PS1_WORKSPACE}${__PS1_WRAPPER_END}${__PS1_PROMPT}"
        "${__PS1_WRAPPER_START}${__PS1_USERNAME}${__PS1_AT}${__PS1_HOSTNAME} ${__PS1_WORKSPACE}${__PS1_WRAPPER_END}${__PS1_GIT}${__PS1_PROMPT}"
        "\[$(tput bold)\]\[\033[38;5;1m\]\u\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;11m\]@\h:\[$(tput sgr0)\]\[\033[38;5;33m\][\[$(tput sgr0)\]\[\033[38;5;39m\]\w\[$(tput sgr0)\]\[\033[38;5;33m\]]\[$(tput sgr0)\]\[\033[38;5;15m\]\\$ \[$(tput sgr0)\]"
        "\[\033[0;36m\]\u\[\033[m\]@\[\033[32m\]\${MACHINE_NAME:-\h}:\[\033[33;1m\]\W/\[\e[34;1m\]\[\e[32;1m\]\$(command -v git > /dev/null 2>&1 && git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/') \[\e[0m\]\$ "
    )
      # export PS1="\[\033[0;36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\W/\[\e[34;1m\]\[\e[32;1m\]\$(command -v git > /dev/null 2>&1 && git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/') \[\e[0m\]\$ "
  # export PS1='\[$(tput bold)\]\[\033[38;5;1m\]\u\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;11m\]@\h:\[$(tput sgr0)\]\[\033[38;5;33m\][\[$(tput sgr0)\]\[\033[38;5;39m\]\w\[$(tput sgr0)\]\[\033[38;5;33m\]]\[$(tput sgr0)\]\[\033[38;5;15m\]\\$ \[$(tput sgr0)\]'
    counter=0

    for var in "${ps_arr[@]}"; do
        echo "$(tput sgr0)${counter}: the prompt is '${var@P}'"
        counter=$((counter + 1))
    done
}
ps1_party

# # for i in {0..15}; do echo -e "$(tput setaf "${i}") ${i}"; done
# for n in $(seq 0 15); do
#     F=$(tput setaf "$n" | cat -v)
#     B=$(tput setab "$n" | cat -v)
#     printf "$(tput setaf "$n")"'%2d  %12s %12s\n' "$n" "$F" "$B"
# done

# # printf '    %12s %12s\n' Foreground Background
# for n in $(seq 0 15); do
#     F=$(tput bold)$(tput setaf "$n" | cat -v)
#     B=$(tput bold)$(tput setab "$n" | cat -v)
#     printf "$(tput setaf "$n")"'%2d  %12s %12s\n' "$n" "$F" "$B"
# done

# export XIT=$?
# [ "$XIT" -ne "0" ] && echo -n "\[\033[1;31m\]M-bM-^^M-^" || echo -n "\[\033[0m\]M-bM-^^M-^\"` \[\033[1;34m\]\w `\
