#!/usr/bin/env bash

#!/usr/bin/env bash

# TODO: Add the pull request setting with the GITHUB TOKEN
# TODO: Make it work both in mac and linux.
# shellcheck disable=2034
VSCODE_SETTINGS='
{
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, SpaceBeforeParens: Never, IndentCaseLabels: true }",
  "[ansible]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[html]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "[javascript]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[jinja-yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[json]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[python]": {
    "editor.tabSize": 4
  },
  "[scss]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "beautify.config": "'"${HOME}"'/projects/vscode_setup/config/.jsbeautifyrc",
  "beautify.language": {
    "css": [
      "css",
      "less",
      "scss"
    ],
    "html": [
      "htm",
      "html",
      "jsp",
      "jinja-html"
    ],
    "js": {
      "filename": [
        ".jshintrc",
        ".jsbeautifyrc"
      ],
      "type": [
        "javascript",
        "json",
        "jsonc",
        "gradle"
      ]
    }
  },
  "diffEditor.ignoreTrimWhitespace": true,
  "editor.detectIndentation": false,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.insertSpaces": true,
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [
    80,
    100,
    120
  ],
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "emeraldwalk.runonsave": {
    "autoClearConsole": true,
    "commands": [
      {
        "cmd": "",
        "match": "\\.jsp"
      },
      {
        "cmd": "",
        "match": "\\.xhtml"
      }
    ],
    "shell": "/bin/bash"
  },
  "emmet.includeLanguages": {
    "jsp": "html"
  },
  "explorer.openEditors.visible": 0,
  "explorer.sortOrder": "type",
  "files.associations": {
    "**/*_vars/**/*.yml": "ansible",
    "**/*ansible*/**/*.yml": "ansible",
    "**/ansible/**/*inventory": "ini",
    "**/ansible/**/hosts": "ini",
    "**/defaults/**/*": "ansible",
    "**/group_vars/**/*": "jinja-yaml",
    "**/handler*/*.yml": "ansible",
    "**/host_vars/**/*": "jinja-yaml",
    "**/inventory/*/*": "ansible",
    "**/meta/*.yml": "ansible",
    "**/playbooks/**/*.yml": "ansible",
    "**/roles/**/*.yml": "ansible",
    "**/tasks/**/*.yml": "ansible",
    "**/vars/**/*.yml": "ansible",
    ".flake8": "ini",
    ".htmlhintrc": "jsonc",
    "ansible.cfg": "ini"
  },
  "files.eol": "\n",
  "files.exclude": {
    "**/*.class": true,
    "**/*.pyc": true,
    "**/.DS_Store": true,
    "**/._*": true,
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.svn": true,
    "**/CVS": true,
    "**/exploded": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/.venv/**": true,
    "**/node_modules/**": true
  },
  "git.autoRepositoryDetection": "openEditors",
  "git.autoStash": true,
  "git.autofetch": true,
  "git.defaultCloneDirectory": "${env:HOME}/projects",
  "git.detectSubmodules": false,
  "git.enableSmartCommit": true,
  "git.ignoreLegacyWarning": true,
  "git.smartCommitChanges": "tracked",
  "githubPullRequests.telemetry.enabled": false,
  "gitlens.advanced.messages": {
    "suppressGitVersionWarning": true,
    "suppressShowKeyBindingsNotice": true
  },
  "gitlens.advanced.telemetry.enabled": false,
  "gitlens.blame.ignoreWhitespace": true,
  "html.format.indentHandlebars": true,
  "html.format.indentInnerHtml": true,
  "htmlhint.documentSelector": [
    "html",
    "htm",
    "jsp"
  ],
  "java.checkstyle.autocheck": false,
  "java.checkstyle.configuration": "https://BLANK/raw/Standards/coding-standards/master/java/checkstyle.xml?token=AAAAI3EWIOQKWC252RINFHK6IVNZG",
  "java.checkstyle.properties": {
    "checkstyle.header.file": "https://BLANK/raw/Standards/coding-standards/master/java/header.txt?token=AAAAI3ADTWHRUZ64SGEW2Y26IVN6O"
  },
  "java.checkstyle.version": "8.29",
  "java.completion.importOrder": [
    "java",
    "javax",
    "org",
    "com"
  ],
  "java.debug.settings.forceBuildBeforeLaunch": false,
  "java.errors.incompleteClasspath.severity": "ignore",
  "java.format.settings.url": "https://BLANK/raw/Standards/coding-standards/master/java/EclipseFormatter.xml?token=AAAAI3ANNCH3CWUTOMI3RGC6IVXKI",
  "java.saveActions.organizeImports": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.useBrowserPreview": true,
  "partialDiff.enableTelemetry": false,
  "projectManager.any.baseFolders": [
    "$home/projects"
  ],
  "projectManager.any.maxDepthRecursion": 1,
  "pyright.useLibraryCodeForTypes": true,
  "python.formatting.autopep8Args": [
    "--global-config=${env:HOME}/projects/vscode_setup/config/.flake8",
    "--max-line-length=100",
    "--hang-closing"
  ],
  "python.jediEnabled": false,
  "python.linting.flake8Args": [
    "--config=${env:HOME}/projects/vscode_setup/config/.flake8",
    "--mypy-config=${env:HOME}/projects/vscode_setup/config/.mypy.ini"
  ],
  "python.linting.flake8Enabled": true,
  "python.linting.pycodestyleArgs": [
    "--max-line-length=100",
    "--hang-closing"
  ],
  "python.linting.pylintEnabled": false,
  "remote.downloadExtensionsLocally": true,
  "remote.extensionKind": {
    "auchenberg.vscode-browser-preview": "workspace",
    "ms-azuretools.vscode-docker": "workspace",
    "pivotal.vscode-boot-dev-pack": "workspace"
  },
  "rest-client.enableTelemetry": false,
  "search.exclude": {
    "**/*.cfg": true,
    "**/*.md": true,
    "**/.venv": true,
    "**/bower_components": true,
    "**/exploded": true,
    "**/node_modules": true
  },
  "shellcheck.customArgs": [
    "-x"
  ],
  "spotify.forceWebApiImplementation": true,
  "sqltools.telemetry": false,
  "sqltools.useNodeRuntime": true,
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false,
  "terminal.integrated.env.linux": {},
  "terminal.integrated.env.osx": {
    "CATALINA_HOME_7": "${env:HOME}/apache-tomcat-7.0.92"
  },
  "terminal.integrated.scrollback": 999999,
  "terminal.integrated.shell.linux": "/bin/bash",
  "terminal.integrated.shell.osx": "/bin/bash",
  "terraform.telemetry.enabled": false,
  "todo-tree.highlights.enabled": true,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "window.restoreWindows": "all",
  "window.zoomLevel": 2,
  "workbench.sideBar.location": "right",
  "xml.format.preserveEmptyContent": true,
  "xml.format.splitAttributes": true,
  "xmlTools.splitAttributesOnFormat": true,
  "xmlTools.xmlFormatterImplementation": "classic"
}
'



function vscode_settings() {
  # shellcheck source=./variables.sh
  source "${VSCODE_UTILITY_HOME}/variables.sh"
  msg --success "${VSCODE_SETTINGS}"
  msg --warning "Copy and paste the setting above into vscode settings (Cmd + ,)."
  onlyInMac && code "${HOME}/Library/Application Support/Code/User/settings.json"
}

vscode_settings
