#!/usr/bin/env bash
# # Steps
# - Create /app/vscode/extensions, /app/vscode/.extension-cache, /app/vscode/models and fix permissions
# - Create symlink in ${HOME}/.vscode-server/extensions to /app/vscode/extensions
# - Create symlink in ${HOME}/.extension-cache to /app/vscode/.extension-cache
# - Install jdk11, jdk8, unzip and new git

# - Use c tool to install extensions
# - Rsync the models folder to /app/vscode/models

# - Replace the with proper path for model in json
# - Fix permissions one more time
# - Generate remote.json with proper path into ${HOME}/.vscode-server/data/Machine/settings.json with proper java home

function finalize() {
  local targetHost="${1}"
  echo "TargetHost: ${targetHost}"
# shellcheck disable=SC2016
  local remote_cmd='\
    echo " - Fix Permission"
    sudo chmod -R +xrw /app/vscode
    sudo chown -R "${USER}" ${HOME}/.vscode-server

    echo " - Replace models directory"
    sed -i "s|/tmp/symlinks/vscodeModels|/app/vscode/models|g" /app/vscode/models/models.json

    echo " - Getting java 8 and 11 home"
    java8="$(find /usr/lib/jvm -name javac | grep "java-1.8" | grep "/bin/" | sed "s|/bin.*||")"
    java11="$(find /usr/lib/jvm -name javac | grep "java-11" | grep "/bin/" | sed "s|/bin.*||")"

    echo " - Generating Settings.json"
    echo '"'"'
    {
      "java.configuration.runtimes": [
        {
          "name": "JavaSE-1.8",
          "path": "JAVA_8"
        },
        {
          "name": "JavaSE-11",
          "path": "JAVA_11",
          "sources": "JAVA_11/lib/src.zip",
          "javadoc": "https://docs.oracle.com/en/java/javase/11/docs/api",
          "default": true
        }
      ],
      "vsintellicode.modelDownloadPath": "/app/vscode/models",
      "java.home": "JAVA_11"
    }
    '"'"' | sed "s|JAVA_11|${java11}|g" | sed "s|JAVA_8|${java8}|g" | tee "${HOME}/.vscode-server/data/Machine/settings.json"

    echo "DONE!"
  '

  ssh "${ssh_options[@]}" -q "${targetHost}" "${remote_cmd}"
}

function prepare() {
  local targetHost="${1}"
  # shellcheck disable=SC2016
  local init_cmd='
    sudo yum -y remove "$(rpm -qa | grep ^git)" >/dev/null 2>&1 &&
      sudo yum install -y "https://BLANK/RHEL-7-x86_64/git-2.28.0-0.el7.x86_64.rpm" >/dev/null 2>&1
    ! find /usr/lib/jvm -name javac | grep -q "java-1.8" && sudo yum install -y "java-1.8.0-openjdk*" "--exclude=java-*-debug"
    ! find /usr/lib/jvm -name javac | grep -q "java-11" && sudo yum install -y "java-11-openjdk*" "--exclude=java-*-debug"
    ! command -v unzip >/dev/null 2>&1 && sudo yum install -y unzip


    echo " - Crete Proper Folders"
    sudo mkdir -p /app/vscode/extensions /app/vscode/.extension-cache /app/vscode/models ${HOME}/.vscode-server/data/Machine

    echo " - Verify Permission of /app/vscode"
    sudo chmod -R o+rw /app/vscode

    echo " - Fix permission for top level folders"
    sudo find /app/vscode -maxdepth 1 -type d | xargs -I{} sudo chmod o+rwx {}

    echo " - Ensure extension symlink"
    [ ! -L "${HOME}/.vscode-server/extensions" ] && rm -rf "${HOME}/.vscode-server/extensions"
    ln -sfn /app/vscode/extensions "${HOME}/.vscode-server/extensions"

    echo " - Ensure .extension-cache symlink"
    [ ! -L "${HOME}/.extension-cache" ] && rm -rf "${HOME}/.extension-cache"
    ln -sfn /app/vscode/.extension-cache "${HOME}/.extension-cache"
  '

  ssh "${ssh_options[@]}" -q "${targetHost}" "${init_cmd}"
}

function main(){
  local targetHost="${1}"
  prepare "${targetHost}"
  c -h "${targetHost}" -e
  rsync /tmp/symlinks/vscodeModels/* "${targetHost}:/app/vscode/models"
  finalize "${targetHost}"
}
main "${@}"
