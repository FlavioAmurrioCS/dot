{
  // Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Flask App: template extending layout.html": {
    "prefix": "flextlayout",
    "body": [
			"{% extends \"layout.html\" %}",
			"{% block title %}",
			"$0",
			"{% endblock %}",
			"{% block content %}",
			"{% endblock %}"
		],
    "description": "Boilerplate template that extends layout.html"
  },
  "c:out Template": {
    "prefix": "!out",
    "body": [
            "<c:out value=\"$1\" />"
        ],
    "description": "Generate c:out Template"
  },
  "c:set Template": {
    "prefix": "!set",
    "body": [
            "<c:set var=\"$1\" scope=\"$2\" value=\"$3\"/>"
        ],
    "description": "Generate c:set Template"
  },
  "c:remove Template": {
    "prefix": "!remove",
    "body": [
            "<c:remove var=\"$1\" scope=\"$2\" />"
        ],
    "description": "Generate c:remove Template"
  },
  "c:catch Template": {
    "prefix": "!catch",
    "body": [
            "<c:catch var=\"$1\">",
            "</c:catch>"
        ],
    "description": "Generate c:remove Template"
  },
  "c:if Template": {
    "prefix": "!if",
    "body": [
            "<c:if test=\"$1\" >",
            "</c:if>"
        ],
    "description": "Generate c:if Template"
  },
  "c:choose Template": {
    "prefix": "!choose",
    "body": [
            "<c:choose>",
            "   <c:when test=\"$1\">",
            "   </c:when>",
            "",
            "   <c:otherwise>",
            "   </c:otherwise>",
            "</c:choose>"
        ],
    "description": "Generate c:choose Template"
  },
  "c:when Template": {
    "prefix": "!when",
    "body": [
            "<c:when test=\"$1\" >",
            "</c:when>"
        ],
    "description": "Generate c:when Template"
  },
  "c:otherwise Template": {
    "prefix": "!otherwise",
    "body": [
            "<c:otherwise>",
            "</c:otherwise>"
        ],
    "description": "Generate c:otherwise Template"
  },
  "c:import Template": {
    "prefix": "!import",
    "body": [
            "<c:import var=\"$1\" url=\"$2\" />"
        ],
    "description": "Generate c:import Template"
  },
  "c:forEach Template": {
    "prefix": "!forEach",
    "body": [
            "<c:forEach items=\"$1\" var=\"$2\">",
            "</c:forEach>"
        ],
    "description": "Generate c:forEach Template"
  },
  "c:forTokens Template": {
    "prefix": "!forTokens",
    "body": [
            "<c:forTokens items=\"$1\" delims=\"$2\" var=\"$3\" >",
            "</c:forTokens>"
        ],
    "description": "Generate c:forTokens Template"
  },
  "c:param Template": {
    "prefix": "!param",
    "body": [
            "<c:param name=\"$1\" value=\"$2\" />"
        ],
    "description": "Generate c:param Template"
  },
  "c:redirect Template": {
    "prefix": "!redirect",
    "body": [
            "<c:redirect url=\"$1\" />"
        ],
    "description": "Generate c:redirect Template"
  },
  "c:url Template": {
    "prefix": "!url",
    "body": [
            "<c:url value=\"$1\" />"
        ],
    "description": "Generate c:url Template"
  },
  "spring Template": {
    "prefix": "!spring",
    "body": [
            "<spring:theme code=\"$1\"/>"
        ],
    "description": "Generate spring Template"
  },
  "print Template": {
    "prefix": "!print",
    "body": [
            "<c:set var=\"object\" value=\"${product}\" />",
            "<c:if test=\"${not empty object['class'].declaredFields}\">",
            "   <h2>Declared fields <em>&dollar;{object.name}</em></h2>",
            "   <ul>",
            "       <c:forEach var=\"field\" items=\"${object['class'].declaredFields}\">",
            "           <c:catch><li><span style=\"font-weight: bold\">",
            "               ${field.name}: </span>${object[field.name]}</li>",
            "           </c:catch>",
            "       </c:forEach>",
            "   </ul>",
            "</c:if>"
        ],
    "description": "Generate print Template"
  }
}
