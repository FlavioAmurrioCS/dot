{
  "alt-require": true,                 // Alt of img tag must be set value.
  "attr-lowercase": false,             // Attribute name must be lowercase. False for JSP/JSF
  "attr-no-duplication": true,         // Attribute name can not been duplication.
  "attr-unsafe-chars": true,           // Attribute value cant not use unsafe chars.
  "attr-value-double-quotes": true,    // Attribute value must closed by double quotes.
  "attr-value-not-empty": true,        // Attribute must set value.
  "csslint": {                         // Scan css with csslint.
    "display-property-grouping": true,
    "known-properties": true
  },
  "doctype-first": false,              // Doctype must be first. False for template inheritance
  "doctype-html5": false,              // Doctype must be html5. False for template inheritance
  "empty-tag-not-self-closed": true,   // The empty tag should not be closed by self.
  "head-script-disabled": false,       // The script tag can not be used in head.
  "href-abs-or-rel": "rel",            // Href must be absolute or relative. abs/rel
  "id-class-ad-disabled": true,        // Id and class can not use ad keyword, it will blocked by adblock software.
  // "id-class-value": "hump",            // Id and class value must meet some rules: underline, dash, hump.
  "id-unique": true,                   // Id must be unique.
  "inline-script-disabled": false,     // Inline script cannot be use.
  "inline-style-disabled": false,      // Inline style cannot be use.
  // "jshint": {                          // Scan script with jshint.
  //     // JSHint Default Configuration File (as on JSHint website)
  //     // See http://jshint.com/docs/ for more details

  //     "maxerr"        : 50,       // {int} Maximum error before stopping

  //     // Enforcing
  //     "bitwise"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
  //     "camelcase"     : false,    // true: Identifiers must be in camelCase
  //     "curly"         : true,     // true: Require {} for every new block or scope
  //     "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
  //     "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
  //     "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
  //     "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  //     "latedef"       : false,    // true: Require variables/functions to be defined before being used
  //     "newcap"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`
  //     "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
  //     "noempty"       : true,     // true: Prohibit use of empty blocks
  //     "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters.
  //     "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
  //     "plusplus"      : false,    // true: Prohibit use of `++` and `--`
  //     "quotmark"      : false,    // Quotation mark consistency:
  //                                 //   false    : do nothing (default)
  //                                 //   true     : ensure whatever is used is consistent
  //                                 //   "single" : require single quotes
  //                                 //   "double" : require double quotes
  //     "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
  //     "unused"        : true,     // Unused variables:
  //                                 //   true     : all variables, last function parameter
  //                                 //   "vars"   : all variables only
  //                                 //   "strict" : all variables, all function parameters
  //     "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode
  //     "maxparams"     : false,    // {int} Max number of formal params allowed per function
  //     "maxdepth"      : false,    // {int} Max depth of nested blocks (within functions)
  //     "maxstatements" : false,    // {int} Max number statements per function
  //     "maxcomplexity" : false,    // {int} Max cyclomatic complexity per function
  //     "maxlen"        : false,    // {int} Max number of characters per line
  //     "varstmt"       : false,    // true: Disallow any var statements. Only `let` and `const` are allowed.

  //     // Relaxing
  //     "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  //     "boss"          : false,     // true: Tolerate assignments where comparisons would be expected
  //     "debug"         : false,     // true: Allow debugger statements e.g. browser breakpoints.
  //     "eqnull"        : false,     // true: Tolerate use of `== null`
  //     "esversion"     : 5,         // {int} Specify the ECMAScript version to which the code must adhere.
  //     "moz"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)
  //                                  // (ex: `for each`, multiple try/catch, function expressionâ€¦)
  //     "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
  //     "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
  //     "funcscope"     : false,     // true: Tolerate defining variables inside control statements
  //     "globalstrict"  : false,     // true: Allow global "use strict" (also enables 'strict')
  //     "iterator"      : false,     // true: Tolerate using the `__iterator__` property
  //     "lastsemic"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  //     "laxbreak"      : false,     // true: Tolerate possibly unsafe line breakings
  //     "laxcomma"      : false,     // true: Tolerate comma-first style coding
  //     "loopfunc"      : false,     // true: Tolerate functions being defined in loops
  //     "multistr"      : false,     // true: Tolerate multi-line strings
  //     "noyield"       : false,     // true: Tolerate generator functions with no yield statement in them.
  //     "notypeof"      : false,     // true: Tolerate invalid typeof operator values
  //     "proto"         : false,     // true: Tolerate using the `__proto__` property
  //     "scripturl"     : false,     // true: Tolerate script-targeted URLs
  //     "shadow"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  //     "sub"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation
  //     "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
  //     "validthis"     : false,     // true: Tolerate using this in a non-constructor function

  //     // Environments
  //     "browser"       : true,     // Web Browser (window, document, etc)
  //     "browserify"    : false,    // Browserify (node.js code in the browser)
  //     "couch"         : false,    // CouchDB
  //     "devel"         : true,     // Development/debugging (alert, confirm, etc)
  //     "dojo"          : false,    // Dojo Toolkit
  //     "jasmine"       : false,    // Jasmine
  //     "jquery"        : false,    // jQuery
  //     "mocha"         : true,     // Mocha
  //     "mootools"      : false,    // MooTools
  //     "node"          : false,    // Node.js
  //     "nonstandard"   : false,    // Widely adopted globals (escape, unescape, etc)
  //     "phantom"       : false,    // PhantomJS
  //     "prototypejs"   : false,    // Prototype and Scriptaculous
  //     "qunit"         : false,    // QUnit
  //     "rhino"         : false,    // Rhino
  //     "shelljs"       : false,    // ShellJS
  //     "typed"         : false,    // Globals for typed array constructions
  //     "worker"        : false,    // Web Workers
  //     "wsh"           : false,    // Windows Scripting Host
  //     "yui"           : false,    // Yahoo User Interface

  //     // Custom Globals
  //     "globals"       : {}        // additional predefined global variables
  // },
  "space-tab-mixed-disabled": "true",  // Spaces and tabs can not mixed in front of line.true/space/tab
  "spec-char-escape": true,            // Special characters must be escaped.
  "src-not-empty": true,               // Src of img(script,link) must set value.
  "style-disabled": true,              // Style tag can not be use.
  "tag-pair": true,                    // Tag must be paired.
  "tag-self-close": false,              // The empty tag must closed by self.
  "tagname-lowercase": false,          // Tagname must be lowercase.
  "title-require": false               // <title> must be present in <head> tag..False for template
}
